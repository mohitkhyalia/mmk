{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\n// Create a cart context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Define initial state for the cart\nconst initialCartState = [];\nconst initialFavState = [];\n\n// Create a cart reducer to handle cart actions\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_CART':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_CART':\n      return [];\n    default:\n      return state;\n  }\n};\nconst favReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAV':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_FAV':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_FAV':\n      return [];\n    default:\n      return state;\n  }\n};\n\n// Create a CartProvider component to provide cart state and functions to child components\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\n  const {\n    suserData\n  } = useAuth();\n  const addToCart = useCallback(item => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: item\n    });\n  }, []);\n  console.log('caa', cart);\n  const removeFromCart = useCallback(item => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: item\n    });\n  }, []);\n  const clearCart = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  }, []);\n  const addToFav = useCallback(item => {\n    spatch({\n      type: 'ADD_TO_FAV',\n      payload: item\n    });\n  }, []);\n  const removeFromFav = useCallback(item => {\n    spatch({\n      type: 'REMOVE_FROM_FAV',\n      payload: item\n    });\n  }, []);\n  const clearFav = useCallback(() => {\n    spatch({\n      type: 'CLEAR_FAV'\n    });\n  }, []);\n  const client = axios.create({\n    baseURL: 'http://127.0.0.1:8000'\n  });\n  useEffect(() => {\n    console.log(suserData, suserData.data, suserData.data.id);\n    // Fetch cart data on component mount\n    client.post(`/api/cart/${userid}/`) // Replace 'your_user_id' with the actual user ID\n    .then(function (res) {\n      console.log(res);\n    }).catch(error => console.error('Error fetching cart data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      fav,\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      addToFav,\n      removeFromFav,\n      clearFav\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the cart context\n_s(CartProvider, \"4n1eQu+80ah9WWKzF+v7Zc6NjWw=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  async function carto() {\n    // Fetch cart data on component mount\n    client.get(`/api/cart/${user_id}/`).then(response => {\n      const cartData = response.data;\n      // Assuming cartData is an array of items, you can update the cart context\n      cartData.forEach(item => addToCart(item));\n    }).catch(error => console.error('Error fetching cart data:', error));\n\n    // Cleanup function to clear cart when the component unmounts\n    return () => {\n      clearCart();\n    };\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","useEffect","axios","useAuth","jsxDEV","_jsxDEV","CartContext","initialCartState","initialFavState","cartReducer","state","action","type","payload","filter","item","id","favReducer","CartProvider","children","_s","cart","dispatch","fav","spatch","suserData","addToCart","console","log","removeFromCart","clearCart","addToFav","removeFromFav","clearFav","client","create","baseURL","data","post","userid","then","res","catch","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","carto","get","user_id","response","cartData","forEach","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth  } from '../context/AuthContext';\r\n// Create a cart context\r\nconst CartContext = createContext();\r\n\r\n// Define initial state for the cart\r\nconst initialCartState = [];\r\nconst initialFavState = [];\r\n\r\n// Create a cart reducer to handle cart actions\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_CART':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_CART':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst favReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_FAV':\r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_FAV':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_FAV':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n// Create a CartProvider component to provide cart state and functions to child components\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\r\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\r\n  const { suserData } = useAuth();\r\n  const addToCart = useCallback(item => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  }, []);\r\n\r\n  console.log('caa',cart);\r\n\r\n  const removeFromCart = useCallback(item => {\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: item });\r\n  }, []);\r\n\r\n  const clearCart = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  }, []);\r\n\r\n  const addToFav = useCallback(item => {\r\n    spatch({ type: 'ADD_TO_FAV', payload: item });\r\n  }, []);\r\n\r\n  const removeFromFav = useCallback(item => {\r\n    spatch({ type: 'REMOVE_FROM_FAV', payload: item });\r\n  }, []);\r\n\r\n  const clearFav = useCallback(() => {\r\n    spatch({ type: 'CLEAR_FAV' });\r\n  }, []);\r\n\r\n  const client = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000',\r\n  });\r\n  useEffect(() => {\r\n    console.log(suserData,suserData.data,suserData.data.id);\r\n    // Fetch cart data on component mount\r\n    client.post(`/api/cart/${userid}/`)  // Replace 'your_user_id' with the actual user ID\r\n      .then(function (res) {console.log(res)})\r\n      \r\n      .catch(error => console.error('Error fetching cart data:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{fav, cart, addToCart, removeFromCart, clearCart,addToFav, removeFromFav, clearFav }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Create a custom hook to use the cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  \r\n  async function carto() {\r\n    // Fetch cart data on component mount\r\n    client.get(`/api/cart/${user_id}/`)\r\n      .then(response => {\r\n        const cartData = response.data;\r\n        // Assuming cartData is an array of items, you can update the cart context\r\n        cartData.forEach(item => addToCart(item));\r\n      })\r\n      .catch(error => console.error('Error fetching cart data:', error));\r\n\r\n    // Cleanup function to clear cart when the component unmounts\r\n    return () => {\r\n      clearCart();\r\n    };\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}