{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = false;\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:8000'\n});\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [suserData, setSuserData] = useState(null);\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [upass, setUpass] = useState('');\n  useEffect(() => {\n    getuser();\n  }, []);\n  function submitUser(e) {\n    console.log(e);\n    client.post('/api/register/', e).then(function (res) {\n      submitlogin(e);\n    });\n  }\n  const authToken = \"Gpx5u80hulIYpsoQkKbwW2F0M7u61oKI\";\n  function getuser() {\n    client.get('/api/user/', {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(function (res) {\n      const userData = res.data;\n      console.log(\"dataaaaaaaaaa\", userData);\n      setSuserData(userData);\n      setIsLoggedIn(true);\n    }).catch(function (error) {\n      console.log('***********eorror user data***********');\n      console.error('Error fetching user data:', error);\n      setSuserData(null);\n      setIsLoggedIn(false);\n    });\n  }\n  function submitlogin(e) {\n    client.post('/api/login/', e, {\n      maxRedirects: 0\n    }).then(function (res) {\n      console.log(\"log\", res);\n      getuser();\n      setIsLoggedIn(true);\n    });\n  }\n  function submitlogout(e) {\n    client.post('/api/logout/', {}).then(function (res) {\n      setSuserData(null);\n      setIsLoggedIn(false);\n    });\n  }\n  const updateislog = newvalue => {\n    setIsLoggedIn(newvalue);\n  };\n\n  /****** */\n\n  /*const login = (ldata) => {\r\n    if (userData?.find((item) => item.email === ldata.name && item.password === ldata.password)){\r\n      const dts = userData?.find((item) => item.name === ldata.name);\r\n     \r\n      setSuserData(dts)\r\n      setM(dts)\r\n      console.log('Suserdata',dts);\r\n    setIsLoggedIn(true);\r\n    alert(' user/password')\r\n    console.log('m',userData);\r\n  }\r\n    \r\n    else{\r\n      alert('user not found')\r\n      setIsLoggedIn(false);\r\n      console.log('userdata',ldata);\r\n      console.log(\"suserData is undefined:\", suserData);\r\n    }\r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      const dts = emailMatch.find((item) => item.email === ldata.name);\r\n      setSuserData(dts);\r\n      setM(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n      console.log('m', m);\r\n    } \r\n    \r\n  };*/\n\n  /**************************************************************** */\n\n  /******************************************************************************** \r\n  const login = (ldata) => {\r\n    \r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      // You found a matching user, so you can access its properties directly\r\n      const dts = emailMatch;\r\n      setSuserData(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n    } else {\r\n      alert('Invalid email or password');\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n    const logout = () => {\r\n    setIsLoggedIn(false);\r\n    alert('You Have Been Logout')\r\n  };\r\n   \r\n   \r\n    const updateData=(udata) =>{\r\n    const jsonData = JSON.stringify(udata);\r\n      fetch('/api/users', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: jsonData,\r\n    })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json(); // Parse the response JSON if needed\r\n      }\r\n      throw new Error('Network response was not ok.');\r\n    })\r\n    .then((data) => {\r\n      // Handle success (e.g., display a success message)\r\n      console.log('User added successfully:', data);\r\n    })\r\n    .catch((error) => {\r\n      // Handle errors (e.g., display an error message)\r\n      console.error('Error adding user:', error);\r\n    });\r\n    }\r\n  */\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      submitUser,\n      suserData,\n      submitlogin,\n      submitlogout,\n      updateislog\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"bpxBYgt7RTG7N0qyg0TcMAvo5+E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","client","create","baseURL","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","suserData","setSuserData","email","setEmail","username","setUsername","upass","setUpass","getuser","submitUser","e","console","log","post","then","res","submitlogin","authToken","get","headers","Authorization","userData","data","catch","error","maxRedirects","submitlogout","updateislog","newvalue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\naxios.defaults.withCredentials = false;\r\n\r\nconst client = axios.create({\r\n  baseURL: 'http://127.0.0.1:8000',\r\n});\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [suserData, setSuserData] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [upass, setUpass] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n      \r\n    \r\n    getuser()\r\n    \r\n  }, []);\r\n\r\n  function submitUser(e) {\r\n    console.log(e);\r\n    client.post('/api/register/', e).then(function (res) {\r\n      submitlogin(e);\r\n    });\r\n  }\r\n\r\n  const authToken = \"Gpx5u80hulIYpsoQkKbwW2F0M7u61oKI\"\r\n\r\n  function getuser(){\r\n    client.get('/api/user/',{ headers: {\r\n      Authorization: `Bearer ${authToken}`,\r\n    },})\r\n      .then(function (res) {\r\n        const userData = res.data;\r\n        console.log(\"dataaaaaaaaaa\",userData);\r\n        setSuserData(userData);\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.log('***********eorror user data***********');\r\n        console.error('Error fetching user data:', error);\r\n        setSuserData(null);\r\n        setIsLoggedIn(false);\r\n      });\r\n  }\r\n  \r\n\r\n  function submitlogin(e) {\r\n   \r\n    client.post('/api/login/', e,{ maxRedirects: 0 }).then(function (res) {\r\n      console.log(\"log\",res);\r\n      getuser()\r\n      setIsLoggedIn(true);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  function submitlogout(e) {\r\n    \r\n    client.post('/api/logout/', {}).then(function (res) {\r\n      setSuserData(null);\r\n      setIsLoggedIn(false);\r\n    });\r\n  }\r\n\r\n  const updateislog=(newvalue)=>{\r\n    setIsLoggedIn(newvalue)\r\n  }\r\n\r\n\r\n\r\n\r\n  /****** */\r\n\r\n  /*const login = (ldata) => {\r\n    if (userData?.find((item) => item.email === ldata.name && item.password === ldata.password)){\r\n      const dts = userData?.find((item) => item.name === ldata.name);\r\n     \r\n      setSuserData(dts)\r\n      setM(dts)\r\n      console.log('Suserdata',dts);\r\n    setIsLoggedIn(true);\r\n    alert(' user/password')\r\n    console.log('m',userData);\r\n  }\r\n    \r\n    else{\r\n      alert('user not found')\r\n      setIsLoggedIn(false);\r\n      console.log('userdata',ldata);\r\n      console.log(\"suserData is undefined:\", suserData);\r\n    }\r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      const dts = emailMatch.find((item) => item.email === ldata.name);\r\n      setSuserData(dts);\r\n      setM(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n      console.log('m', m);\r\n    } \r\n    \r\n  };*/\r\n\r\n\r\n  /**************************************************************** */\r\n\r\n\r\n\r\n\r\n  /******************************************************************************** \r\n  const login = (ldata) => {\r\n    \r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      // You found a matching user, so you can access its properties directly\r\n      const dts = emailMatch;\r\n      setSuserData(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n    } else {\r\n      alert('Invalid email or password');\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    alert('You Have Been Logout')\r\n  };\r\n\r\n \r\n\r\n \r\n\r\n  const updateData=(udata) =>{\r\n    const jsonData = JSON.stringify(udata);\r\n\r\n    fetch('/api/users', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: jsonData,\r\n    })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json(); // Parse the response JSON if needed\r\n      }\r\n      throw new Error('Network response was not ok.');\r\n    })\r\n    .then((data) => {\r\n      // Handle success (e.g., display a success message)\r\n      console.log('User added successfully:', data);\r\n    })\r\n    .catch((error) => {\r\n      // Handle errors (e.g., display an error message)\r\n      console.error('Error adding user:', error);\r\n    });\r\n\r\n  }\r\n*/\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn,submitUser,suserData, submitlogin, submitlogout ,updateislog}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}