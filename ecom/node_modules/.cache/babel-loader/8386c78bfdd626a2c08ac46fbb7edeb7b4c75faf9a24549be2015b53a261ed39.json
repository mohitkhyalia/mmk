{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport function useUser() {\n  _s();\n  return useContext(UserContext);\n}\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function UserProvider({\n  children\n}) {\n  _s2();\n  const [useriD, setUseriD] = useState(null);\n  const updateData = udata => {\n    const jsonData = JSON.stringify(udata);\n    setUseriD(jsonData.id);\n  };\n  useEffect(() => {\n    // Fetch user data based on the user ID you want to update\n    fetch(`/api/users/${useriD}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok.');\n    }).then(data => {\n      setUserData(data); // Populate the form with the user's current data\n    }).catch(error => {\n      console.error('Error fetching user data:', error);\n    });\n  }, []);\n  const newUser = ndata => {\n    const jsonData = JSON.stringify(ndata);\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonData\n    }).then(response => {\n      if (response.ok) {\n        return response.json(); // Parse the response JSON if needed\n      }\n\n      throw new Error('Network response was not ok.');\n    }).then(data => {\n      // Handle success (e.g., display a success message)\n      console.log('User added successfully:', data);\n    }).catch(error => {\n      // Handle errors (e.g., display an error message)\n      console.error('Error adding user:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      updateData,\n      newUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s2(UserProvider, \"0V8Gjzzag7cHVQSkkpWrtdlVgmI=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Cookies","jsxDEV","_jsxDEV","UserContext","useUser","_s","UserProvider","children","_s2","useriD","setUseriD","updateData","udata","jsonData","JSON","stringify","id","fetch","then","response","ok","json","Error","data","setUserData","catch","error","console","newUser","ndata","method","headers","body","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState ,useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nconst UserContext = createContext();\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext);\r\n}\r\nexport function UserProvider({ children }) {\r\n\r\n    const [useriD, setUseriD] = useState(null);\r\n\r\n    const updateData=(udata) =>{\r\n        const jsonData = JSON.stringify(udata);\r\n        setUseriD(jsonData.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Fetch user data based on the user ID you want to update\r\n        fetch(`/api/users/${useriD}`)\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error('Network response was not ok.');\r\n          })\r\n          .then((data) => {\r\n            setUserData(data); // Populate the form with the user's current data\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching user data:', error);\r\n          });\r\n      }, []);\r\n\r\n\r\n      const newUser=(ndata) =>{\r\n        const jsonData = JSON.stringify(ndata);\r\n    \r\n        fetch('/api/users', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: jsonData,\r\n        })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json(); // Parse the response JSON if needed\r\n          }\r\n          throw new Error('Network response was not ok.');\r\n        })\r\n        .then((data) => {\r\n          // Handle success (e.g., display a success message)\r\n          console.log('User added successfully:', data);\r\n        })\r\n        .catch((error) => {\r\n          // Handle errors (e.g., display an error message)\r\n          console.error('Error adding user:', error);\r\n        });\r\n    \r\n      }\r\n    \r\n\r\n      return (\r\n        <UserContext.Provider value={{ updateData,newUser}}>\r\n          {children}\r\n        </UserContext.Provider>\r\n      );\r\n\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAGvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAEvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMa,UAAU,GAAEC,KAAK,IAAI;IACvB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IACtCF,SAAS,CAACG,QAAQ,CAACG,EAAE,CAAC;EAC1B,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZ;IACAkB,KAAK,CAAE,cAAaR,MAAO,EAAC,CAAC,CAC1BS,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB;MACA,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdC,WAAW,CAACD,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,MAAME,OAAO,GAAEC,KAAK,IAAI;IACtB,MAAMhB,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACc,KAAK,CAAC;IAEtCZ,KAAK,CAAC,YAAY,EAAE;MAClBa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEnB;IACR,CAAC,CAAC,CACDK,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC1B;;MACA,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACAI,OAAO,CAACM,GAAG,CAAC,0BAA0B,EAAEV,IAAI,CAAC;IAC/C,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EAEJ,CAAC;EAGD,oBACExB,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAExB,UAAU;MAACiB;IAAO,CAAE;IAAArB,QAAA,EAChDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAG/B;AAAC/B,GAAA,CA7DeF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}