{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\n\n// Create a cart context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Define initial state for the cart\nconst initialCartState = [];\nconst initialFavState = [];\n\n// Create a cart reducer to handle cart actions\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_CART':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_CART':\n      return [];\n    default:\n      return state;\n  }\n};\nconst favReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAV':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_FAV':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_FAV':\n      return [];\n    default:\n      return state;\n  }\n};\n\n// Create a CartProvider component to provide cart state and functions to child components\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\n  const [user_id, setUser_id] = useState();\n  const [cartdata, setCartdata] = useState();\n  const {\n    suserData,\n    isloginned\n  } = useAuth();\n  const get_cart = () => {\n    console.log(\"getting_cart\");\n    if (isloginned) {\n      client.get(`/api/getcart/?user_id=${suserData.id}`).then(res => {\n        setCartdata(res.data.items);\n      });\n    }\n  };\n  useEffect(() => {\n    get_cart();\n  }, [isloginned]);\n  let uId = NaN;\n\n  /*const addToCart = useCallback((item) => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: item });\r\n    console.log(cart);\r\n    cfun()\r\n  }, []);*/\n\n  const addToCart = e => {\n    let newData;\n    if (cartdata) {\n      newData = {\n        user_id: uId,\n        item: [e]\n      };\n      setCartdata(newData);\n    } else {\n      console.log('elas');\n      newData = {\n        user_id: uId,\n        item: [e]\n      };\n      setCartdata(newData);\n    }\n    console.log(newData);\n    cfun(newData);\n  };\n  /*const removeFromCart = useCallback((item) => {\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: item });\r\n  }, []);*/\n  //---HTML code of that cart context?\n  const removeFromCart = e => {\n    /*let newData;\r\n        if (cartdata) {\r\n      newData = {\r\n        user_id: uId,\r\n        item: [...cartdata.item, e],\r\n      };\r\n      setCartdata(newData)\r\n    } else {\r\n      console.log('elas')\r\n      newData = {\r\n        user_id: uId,\r\n        item: [e],\r\n      };\r\n      setCartdata(newData)\r\n    }\r\n        console.log(newData);*/\n    dlecart();\n  };\n  const clearCart = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  }, []);\n  const addToFav = useCallback(item => {\n    spatch({\n      type: 'ADD_TO_FAV',\n      payload: item\n    });\n  }, []);\n  const removeFromFav = useCallback(item => {\n    spatch({\n      type: 'REMOVE_FROM_FAV',\n      payload: item\n    });\n  }, []);\n  const clearFav = useCallback(() => {\n    spatch({\n      type: 'CLEAR_FAV'\n    });\n  }, []);\n  const client = axios.create({\n    baseURL: 'http://127.0.0.1:8000'\n  });\n  const cfun = async r => {\n\n    /*console.log(r);\r\n    if (uId){\r\n      console.log('cart',r);\r\n      console.log('cartdata',cartdata);\r\n      client.post(`/api/cart/`,r)\r\n      .then((res) => {\r\n        console.log('post res',res);\r\n        getcart()\r\n      })\r\n      .catch((error) => console.error('Error fetching cart data:', error));}*/\n  };\n\n  //ait solving profile first \n\n  const dlecart = async () => {\n    /*console.log('dlecart12',user_id);\r\n    if(user_id){\r\n      console.log('dlecart',uId);\r\n    await client.delete(`/api/getcart/?user_id=${user_id}`).then((res) => {\r\n      console.log('del res',res.data.items)\r\n      getcart()\r\n    })}*/\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      fav,\n      cart,\n      cartdata,\n      get_cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      addToFav,\n      removeFromFav,\n      clearFav\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the cart context\n_s(CartProvider, \"jatjElf0gz8JmjfStBQBKEQmUmQ=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n\n  // Cleanup function to clear cart when the component unmounts\n\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","useEffect","useState","axios","useAuth","jsxDEV","_jsxDEV","CartContext","initialCartState","initialFavState","cartReducer","state","action","type","payload","filter","item","id","favReducer","CartProvider","children","_s","cart","dispatch","fav","spatch","user_id","setUser_id","cartdata","setCartdata","suserData","isloginned","get_cart","console","log","client","get","then","res","data","items","uId","NaN","addToCart","e","newData","cfun","removeFromCart","dlecart","clearCart","addToFav","removeFromFav","clearFav","create","baseURL","r","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth  } from '../context/AuthContext';\r\n\r\n// Create a cart context\r\nconst CartContext = createContext();\r\n\r\n// Define initial state for the cart\r\nconst initialCartState = [];\r\nconst initialFavState = [];\r\n\r\n// Create a cart reducer to handle cart actions\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      \r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_CART':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_CART':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst favReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_FAV':\r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_FAV':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_FAV':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n// Create a CartProvider component to provide cart state and functions to child components\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\r\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\r\n  const [user_id, setUser_id] = useState();\r\n  const [cartdata,setCartdata]=useState()\r\n  const { suserData ,isloginned} = useAuth();\r\n  const get_cart=()=>{\r\n    console.log(\"getting_cart\")\r\n    if(isloginned){\r\n      client.get(`/api/getcart/?user_id=${suserData.id}`).then((res) => {\r\n        setCartdata(res.data.items)\r\n      })}\r\n    }\r\n\r\n  useEffect(() => {\r\n    get_cart();\r\n  }, [isloginned]);\r\n\r\n  let uId=NaN;\r\n\r\n  /*const addToCart = useCallback((item) => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: item });\r\n    console.log(cart);\r\n    cfun()\r\n  }, []);*/\r\n\r\n  const addToCart = (e) => {\r\n    let newData;\r\n  \r\n    if (cartdata) {\r\n      newData = {\r\n        user_id: uId,\r\n        item: [ e],\r\n      };\r\n      setCartdata(newData)\r\n    } else {\r\n      console.log('elas')\r\n      newData = {\r\n        user_id: uId,\r\n        item: [e],\r\n      };\r\n      setCartdata(newData)\r\n    }\r\n  \r\n    console.log(newData);\r\n    cfun(newData);\r\n  };\r\n  /*const removeFromCart = useCallback((item) => {\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: item });\r\n  }, []);*/\r\n  //---HTML code of that cart context?\r\n  const removeFromCart = (e) => {\r\n    /*let newData;\r\n  \r\n    if (cartdata) {\r\n      newData = {\r\n        user_id: uId,\r\n        item: [...cartdata.item, e],\r\n      };\r\n      setCartdata(newData)\r\n    } else {\r\n      console.log('elas')\r\n      newData = {\r\n        user_id: uId,\r\n        item: [e],\r\n      };\r\n      setCartdata(newData)\r\n    }\r\n  \r\n    console.log(newData);*/\r\n    dlecart();\r\n  };\r\n\r\n  const clearCart = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  }, []);\r\n\r\n  const addToFav = useCallback((item) => {\r\n    spatch({ type: 'ADD_TO_FAV', payload: item });\r\n  }, []);\r\n\r\n  const removeFromFav = useCallback((item) => {\r\n    spatch({ type: 'REMOVE_FROM_FAV', payload: item });\r\n  }, []);\r\n\r\n  const clearFav = useCallback(() => {\r\n    spatch({ type: 'CLEAR_FAV' });\r\n  }, []);\r\n\r\n  const client = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000',\r\n  });\r\n\r\n  \r\n  \r\n\r\n \r\n\r\n  const cfun = async(r) => {\r\n    \r\n    /*console.log(r);\r\n    if (uId){\r\n      console.log('cart',r);\r\n      console.log('cartdata',cartdata);\r\n      client.post(`/api/cart/`,r)\r\n      .then((res) => {\r\n        console.log('post res',res);\r\n        getcart()\r\n      })\r\n      .catch((error) => console.error('Error fetching cart data:', error));}*/\r\n  };\r\n \r\n\r\n    \r\n  //ait solving profile first \r\n\r\n\r\n  const dlecart =async()=>{\r\n    /*console.log('dlecart12',user_id);\r\n    if(user_id){\r\n      console.log('dlecart',uId);\r\n    await client.delete(`/api/getcart/?user_id=${user_id}`).then((res) => {\r\n      console.log('del res',res.data.items)\r\n      getcart()\r\n    })}*/\r\n    \r\n  }\r\n\r\n  \r\n\r\n \r\n\r\n  return (\r\n    <CartContext.Provider value={{ fav, cart,cartdata, get_cart, addToCart, removeFromCart, clearCart, addToFav, removeFromFav, clearFav }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n  \r\n\r\n// Create a custom hook to use the cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  \r\n\r\n    // Cleanup function to clear cart when the component unmounts\r\n    \r\n  \r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}