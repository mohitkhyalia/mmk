{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\n// Create a cart context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Define initial state for the cart\nconst initialCartState = [];\nconst initialFavState = [];\n\n// Create a cart reducer to handle cart actions\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_CART':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_CART':\n      return [];\n    default:\n      return state;\n  }\n};\nconst favReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_FAV':\n      return [...state, action.payload];\n    case 'REMOVE_FROM_FAV':\n      return state.filter(item => item.id !== action.payload.id);\n    case 'CLEAR_FAV':\n      return [];\n    default:\n      return state;\n  }\n};\n\n// Create a CartProvider component to provide cart state and functions to child components\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\n  const [user_id, setUser_id] = useState();\n  const [cartdata, setCartdata] = useState();\n  const addToCart = useCallback(item => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: item\n    });\n  }, []);\n  const removeFromCart = useCallback(item => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: item\n    });\n  }, []);\n  const clearCart = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  }, []);\n  const addToFav = useCallback(item => {\n    spatch({\n      type: 'ADD_TO_FAV',\n      payload: item\n    });\n  }, []);\n  const removeFromFav = useCallback(item => {\n    spatch({\n      type: 'REMOVE_FROM_FAV',\n      payload: item\n    });\n  }, []);\n  const clearFav = useCallback(() => {\n    spatch({\n      type: 'CLEAR_FAV'\n    });\n  }, []);\n  const client = axios.create({\n    baseURL: 'http://127.0.0.1:8000'\n  });\n  const userid = e => {\n    setUser_id(e);\n  };\n  useEffect(() => {\n    const handleEffect = async () => {\n      // Your code here\n      await getcart();\n\n      // Prevent default behavior (assuming you have an event variable)\n      // event.preventDefault();\n    };\n\n    handleEffect();\n  }, [cart, user_id]);\n  const cfun = () => {\n    const data = {\n      \"user_id\": user_id,\n      \"items\": cart\n    };\n    console.log(user_id);\n    client.post(`/api/cart/${user_id}/`, data).then(res => {\n      console.log(res);\n    }).then(getcart()).catch(error => console.error('Error fetching cart data:', error));\n  };\n  const getcart = () => {\n    client.get(`/api/cart/${user_id}/`).then(res => {\n      setCartdata(res);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      fav,\n      cart,\n      cartdata,\n      userid,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      addToFav,\n      removeFromFav,\n      clearFav\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the cart context\n_s(CartProvider, \"5MAUZBBAZt0xCScyfQ6tJXo9tzE=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n\n  // Cleanup function to clear cart when the component unmounts\n\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","useEffect","useState","axios","jsxDEV","_jsxDEV","CartContext","initialCartState","initialFavState","cartReducer","state","action","type","payload","filter","item","id","favReducer","CartProvider","children","_s","cart","dispatch","fav","spatch","user_id","setUser_id","cartdata","setCartdata","addToCart","removeFromCart","clearCart","addToFav","removeFromFav","clearFav","client","create","baseURL","userid","e","handleEffect","getcart","cfun","data","console","log","post","then","res","catch","error","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// Create a cart context\r\nconst CartContext = createContext();\r\n\r\n// Define initial state for the cart\r\nconst initialCartState = [];\r\nconst initialFavState = [];\r\n\r\n// Create a cart reducer to handle cart actions\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      \r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_CART':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_CART':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst favReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_FAV':\r\n      return [...state, action.payload];\r\n    case 'REMOVE_FROM_FAV':\r\n      return state.filter(item => item.id !== action.payload.id);\r\n    case 'CLEAR_FAV':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n// Create a CartProvider component to provide cart state and functions to child components\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, dispatch] = useReducer(cartReducer, initialCartState);\r\n  const [fav, spatch] = useReducer(favReducer, initialFavState);\r\n  const [user_id, setUser_id] = useState();\r\n  const [cartdata,setCartdata]=useState()\r\n\r\n  const addToCart = useCallback((item) => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  }, []);\r\n\r\n  const removeFromCart = useCallback((item) => {\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: item });\r\n  }, []);\r\n\r\n  const clearCart = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  }, []);\r\n\r\n  const addToFav = useCallback((item) => {\r\n    spatch({ type: 'ADD_TO_FAV', payload: item });\r\n  }, []);\r\n\r\n  const removeFromFav = useCallback((item) => {\r\n    spatch({ type: 'REMOVE_FROM_FAV', payload: item });\r\n  }, []);\r\n\r\n  const clearFav = useCallback(() => {\r\n    spatch({ type: 'CLEAR_FAV' });\r\n  }, []);\r\n\r\n  const client = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000',\r\n  });\r\n\r\n  const userid = (e) => {\r\n    setUser_id(e);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEffect = async () => {\r\n      // Your code here\r\n      await getcart();\r\n  \r\n      // Prevent default behavior (assuming you have an event variable)\r\n      // event.preventDefault();\r\n    };\r\n  \r\n    handleEffect();\r\n  }, [cart, user_id]);\r\n\r\n  const cfun = () => {\r\n    const data ={\r\n      \"user_id\": user_id,\r\n      \"items\":cart\r\n    }\r\n    console.log(user_id);\r\n    client.post(`/api/cart/${user_id}/`,data)\r\n      .then((res) => {\r\n        console.log(res);\r\n      }).then(getcart())\r\n      .catch((error) => console.error('Error fetching cart data:', error));\r\n  };\r\n\r\n  const getcart =()=>{\r\n    client.get(`/api/cart/${user_id}/`).then((res) => {setCartdata(res)})\r\n    \r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ fav, cart,cartdata, userid, addToCart, removeFromCart, clearCart, addToFav, removeFromFav, clearFav }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n  \r\n\r\n// Create a custom hook to use the cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  \r\n\r\n    // Cleanup function to clear cart when the component unmounts\r\n    \r\n  \r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtG,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMU,gBAAgB,GAAG,EAAE;AAC3B,MAAMC,eAAe,GAAG,EAAE;;AAE1B;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAEhB,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACnC,KAAK,kBAAkB;MACrB,OAAOH,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,CAAC;IAC5D,KAAK,YAAY;MACf,OAAO,EAAE;IACX;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AACD,MAAMO,UAAU,GAAGA,CAACP,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACnC,KAAK,iBAAiB;MACpB,OAAOH,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,CAAC;IAC5D,KAAK,WAAW;MACd,OAAO,EAAE;IACX;MACE,OAAON,KAAK;EAChB;AACF,CAAC;;AAID;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGvB,UAAU,CAACU,WAAW,EAAEF,gBAAgB,CAAC;EAClE,MAAM,CAACgB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,UAAU,CAACkB,UAAU,EAAET,eAAe,CAAC;EAC7D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACyB,QAAQ,EAACC,WAAW,CAAC,GAAC1B,QAAQ,CAAC,CAAC;EAEvC,MAAM2B,SAAS,GAAG7B,WAAW,CAAEe,IAAI,IAAK;IACtCO,QAAQ,CAAC;MAAEV,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEE;IAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,cAAc,GAAG9B,WAAW,CAAEe,IAAI,IAAK;IAC3CO,QAAQ,CAAC;MAAEV,IAAI,EAAE,kBAAkB;MAAEC,OAAO,EAAEE;IAAK,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,SAAS,GAAG/B,WAAW,CAAC,MAAM;IAClCsB,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAa,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,QAAQ,GAAGhC,WAAW,CAAEe,IAAI,IAAK;IACrCS,MAAM,CAAC;MAAEZ,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAEE;IAAK,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,aAAa,GAAGjC,WAAW,CAAEe,IAAI,IAAK;IAC1CS,MAAM,CAAC;MAAEZ,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAEE;IAAK,CAAC,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,QAAQ,GAAGlC,WAAW,CAAC,MAAM;IACjCwB,MAAM,CAAC;MAAEZ,IAAI,EAAE;IAAY,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuB,MAAM,GAAGhC,KAAK,CAACiC,MAAM,CAAC;IAC1BC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAIC,CAAC,IAAK;IACpBb,UAAU,CAACa,CAAC,CAAC;EACf,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACd,MAAMuC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACA,MAAMC,OAAO,CAAC,CAAC;;MAEf;MACA;IACF,CAAC;;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACnB,IAAI,EAAEI,OAAO,CAAC,CAAC;EAEnB,MAAMiB,IAAI,GAAGA,CAAA,KAAM;IACjB,MAAMC,IAAI,GAAE;MACV,SAAS,EAAElB,OAAO;MAClB,OAAO,EAACJ;IACV,CAAC;IACDuB,OAAO,CAACC,GAAG,CAACpB,OAAO,CAAC;IACpBU,MAAM,CAACW,IAAI,CAAE,aAAYrB,OAAQ,GAAE,EAACkB,IAAI,CAAC,CACtCI,IAAI,CAAEC,GAAG,IAAK;MACbJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAClB,CAAC,CAAC,CAACD,IAAI,CAACN,OAAO,CAAC,CAAC,CAAC,CACjBQ,KAAK,CAAEC,KAAK,IAAKN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC;EAED,MAAMT,OAAO,GAAEA,CAAA,KAAI;IACjBN,MAAM,CAACgB,GAAG,CAAE,aAAY1B,OAAQ,GAAE,CAAC,CAACsB,IAAI,CAAEC,GAAG,IAAK;MAACpB,WAAW,CAACoB,GAAG,CAAC;IAAA,CAAC,CAAC;EAEvE,CAAC;EAED,oBACE3C,OAAA,CAACC,WAAW,CAAC8C,QAAQ;IAACC,KAAK,EAAE;MAAE9B,GAAG;MAAEF,IAAI;MAACM,QAAQ;MAAEW,MAAM;MAAET,SAAS;MAAEC,cAAc;MAAEC,SAAS;MAAEC,QAAQ;MAAEC,aAAa;MAAEC;IAAS,CAAE;IAAAf,QAAA,EAClIA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAID;AAAArC,EAAA,CA7EaF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AA8EzB,OAAO,MAAMyC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/D,UAAU,CAACQ,WAAW,CAAC;EACvC,IAAI,CAACuD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;;EAGE;;EAGF,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAXWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}