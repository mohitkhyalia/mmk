{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\N\\\\ecom\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = true;\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:8000'\n});\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [upass, setUpass] = useState('');\n  useEffect(() => {\n    client.get('/api/user').then(function (res) {\n      setCurrentUser(true);\n      setIsLoggedIn(true);\n    }).catch(function (error) {\n      setCurrentUser(null);\n      setIsLoggedIn(false);\n    });\n  }, []);\n  function submitUser(e) {\n    client.post('/api/register', {\n      email: e.email,\n      password: e.pass\n    }).then(function (res) {\n      submitlogin(e);\n    });\n  }\n  function submitlogin(e) {\n    client.post('/api/login', {\n      email: e.email,\n      password: e.password\n    }).then(function (res) {\n      setCurrentUser(true);\n      setIsLoggedIn(true);\n    });\n  }\n  function submitlogout(e) {\n    client.post('/api/logout', {}, {\n      withCredentials: true\n    }).then(function (res) {\n      setCurrentUser(null);\n      setIsLoggedIn(false);\n    });\n  }\n  const updateislog = newvalue => {\n    setIsLoggedIn(newvalue);\n  };\n\n  /****** */\n\n  /*const login = (ldata) => {\r\n    if (userData?.find((item) => item.email === ldata.name && item.password === ldata.password)){\r\n      const dts = userData?.find((item) => item.name === ldata.name);\r\n     \r\n      setSuserData(dts)\r\n      setM(dts)\r\n      console.log('Suserdata',dts);\r\n    setIsLoggedIn(true);\r\n    alert(' user/password')\r\n    console.log('m',userData);\r\n  }\r\n    \r\n    else{\r\n      alert('user not found')\r\n      setIsLoggedIn(false);\r\n      console.log('userdata',ldata);\r\n      console.log(\"suserData is undefined:\", suserData);\r\n    }\r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      const dts = emailMatch.find((item) => item.email === ldata.name);\r\n      setSuserData(dts);\r\n      setM(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n      console.log('m', m);\r\n    } \r\n    \r\n  };*/\n\n  /**************************************************************** */\n\n  /******************************************************************************** \r\n  const login = (ldata) => {\r\n    \r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      // You found a matching user, so you can access its properties directly\r\n      const dts = emailMatch;\r\n      setSuserData(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n    } else {\r\n      alert('Invalid email or password');\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n    const logout = () => {\r\n    setIsLoggedIn(false);\r\n    alert('You Have Been Logout')\r\n  };\r\n   \r\n   \r\n    const updateData=(udata) =>{\r\n    const jsonData = JSON.stringify(udata);\r\n      fetch('/api/users', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: jsonData,\r\n    })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json(); // Parse the response JSON if needed\r\n      }\r\n      throw new Error('Network response was not ok.');\r\n    })\r\n    .then((data) => {\r\n      // Handle success (e.g., display a success message)\r\n      console.log('User added successfully:', data);\r\n    })\r\n    .catch((error) => {\r\n      // Handle errors (e.g., display an error message)\r\n      console.error('Error adding user:', error);\r\n    });\r\n    }\r\n  */\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      submitUser,\n      submitlogin,\n      submitlogout,\n      updateislog\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"sko+IWgcIKSQduLcBpWvEP8uOJs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","client","create","baseURL","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","email","setEmail","username","setUsername","upass","setUpass","get","then","res","catch","error","submitUser","e","post","password","pass","submitlogin","submitlogout","updateislog","newvalue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/N/ecom/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst client = axios.create({\r\n  baseURL: 'http://127.0.0.1:8000',\r\n});\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [upass, setUpass] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    client.get('/api/user')\r\n      .then(function (res) {\r\n        setCurrentUser(true);\r\n        setIsLoggedIn(true);\r\n      })\r\n      .catch(function (error) {\r\n        setCurrentUser(null);\r\n        setIsLoggedIn(false);\r\n      });\r\n  }, []);\r\n\r\n  function submitUser(e) {\r\n    \r\n    client.post('/api/register', {\r\n      email: e.email,\r\n      password: e.pass,\r\n    }).then(function (res) {\r\n      submitlogin(e);\r\n    });\r\n  }\r\n\r\n  function submitlogin(e) {\r\n   \r\n    client.post('/api/login', {\r\n      email: e.email,\r\n      password: e.password,\r\n    }).then(function (res) {\r\n      setCurrentUser(true);\r\n      setIsLoggedIn(true);\r\n    });\r\n  }\r\n\r\n  function submitlogout(e) {\r\n    \r\n    client.post('/api/logout', {}, { withCredentials: true }).then(function (res) {\r\n      setCurrentUser(null);\r\n      setIsLoggedIn(false);\r\n    });\r\n  }\r\n\r\n  const updateislog=(newvalue)=>{\r\n    setIsLoggedIn(newvalue)\r\n  }\r\n\r\n\r\n\r\n\r\n  /****** */\r\n\r\n  /*const login = (ldata) => {\r\n    if (userData?.find((item) => item.email === ldata.name && item.password === ldata.password)){\r\n      const dts = userData?.find((item) => item.name === ldata.name);\r\n     \r\n      setSuserData(dts)\r\n      setM(dts)\r\n      console.log('Suserdata',dts);\r\n    setIsLoggedIn(true);\r\n    alert(' user/password')\r\n    console.log('m',userData);\r\n  }\r\n    \r\n    else{\r\n      alert('user not found')\r\n      setIsLoggedIn(false);\r\n      console.log('userdata',ldata);\r\n      console.log(\"suserData is undefined:\", suserData);\r\n    }\r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      const dts = emailMatch.find((item) => item.email === ldata.name);\r\n      setSuserData(dts);\r\n      setM(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n      console.log('m', m);\r\n    } \r\n    \r\n  };*/\r\n\r\n\r\n  /**************************************************************** */\r\n\r\n\r\n\r\n\r\n  /******************************************************************************** \r\n  const login = (ldata) => {\r\n    \r\n    const emailMatch = userData.find((item) => item.email === ldata.name && item.password === ldata.password);\r\n    if (emailMatch) {\r\n      // You found a matching user, so you can access its properties directly\r\n      const dts = emailMatch;\r\n      setSuserData(dts);\r\n      console.log('Suser', suserData);\r\n      setIsLoggedIn(true);\r\n      alert('User logged in');\r\n    } else {\r\n      alert('Invalid email or password');\r\n      setIsLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    alert('You Have Been Logout')\r\n  };\r\n\r\n \r\n\r\n \r\n\r\n  const updateData=(udata) =>{\r\n    const jsonData = JSON.stringify(udata);\r\n\r\n    fetch('/api/users', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: jsonData,\r\n    })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json(); // Parse the response JSON if needed\r\n      }\r\n      throw new Error('Network response was not ok.');\r\n    })\r\n    .then((data) => {\r\n      // Handle success (e.g., display a success message)\r\n      console.log('User added successfully:', data);\r\n    })\r\n    .catch((error) => {\r\n      // Handle errors (e.g., display an error message)\r\n      console.error('Error adding user:', error);\r\n    });\r\n\r\n  }\r\n*/\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn,submitUser, submitlogin, submitlogout ,updateislog}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}